{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","numberOfPages","Math","ceil","length","Number","chanePage","i","className","classNames","disabled","href","onClick","list","push","active","pagesList","items","from","to","numbers","n","getNumbers","map","App","useState","itemsPerPage","setItemsPerPage","setCurrentPage","startItem","lastItem","id","value","onChange","event","target","htmlFor","slice","item","ReactDOM","render","document","getElementById"],"mappings":"oNASaA,EAAa,SAAC,GAEH,IADtBC,EACqB,EADrBA,MAAOC,EACc,EADdA,QAASC,EACK,EADLA,YAAaC,EACR,EADQA,aAEvBC,EAAgBC,KAAKC,KAAKN,EAAMO,OAASC,OAAOP,IAEhDQ,EAAY,SAACC,GACbA,IAAMR,GAAqB,IAANQ,GAAWA,IAAMN,EAAgB,GACxDD,EAAaO,IA6CjB,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAW,YAAa,CAAEC,SAA0B,IAAhBX,IAAnD,SACE,mBACE,UAAQ,WACRS,UAAU,YACVG,KAAK,QACL,gBAtBc,IAAhBZ,EAuBEa,QAAS,kBAAMN,EAAUP,EAAc,IALzC,oBA5CY,WAGhB,IAFA,IAAMc,EAAO,GADS,WAGbN,GACPM,EAAKC,KACH,oBACEN,UAAWC,IAAW,YACpB,CAAEM,OAAQhB,IAAgBQ,IAF9B,SAKE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAI,WAAMJ,GACVK,QAAS,kBAAMN,EAAUC,IAJ3B,SAMGA,KAREA,KALFA,EAAI,EAAGA,GAAKN,EAAeM,GAAK,EAAI,EAApCA,GAmBT,OAAOM,EAgCJG,GACD,oBAAIR,UAAWC,IAAW,YACxB,CAAEC,SAAUX,IAAgBE,IAD9B,SAGE,mBACE,UAAQ,WACRO,UAAU,YACVG,KAAK,QACL,gBA5BFZ,IAAgBE,EA6BdW,QAAS,kBAAMN,EAAUP,EAAc,IALzC,wBCxEFkB,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQN,KAAKO,GAGf,OAAOD,EDDKE,CAAW,EAAG,IACzBC,KAAI,SAAAF,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,MAAwCC,mBAAiB,KAAzD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsCF,mBAAiB,GAAvD,mBAAO1B,EAAP,KAAoB6B,EAApB,KAeMC,GAAa9B,EAAc,GAAKM,OAAOqB,GAAgB,EACzDI,EAAW/B,EAAcM,OAAOqB,GAMpC,OAJII,EAAWb,EAAMb,SACnB0B,EAAWb,EAAMb,QAIjB,sBAAKI,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,SACG,eAAQT,EAAR,mBAA8B8B,GAA9B,aACEC,EADF,eACiBb,EAAMb,OADvB,OAIH,sBAAKI,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRuB,GAAG,kBACHvB,UAAU,eACVwB,MAAON,EACPO,SApCM,SAACC,GACfP,GAAgB,kBAAMO,EAAMC,OAAOH,SACnCJ,EAAe,IA6BT,UAOE,wBAAQI,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkB5B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEX,MAAOoB,EACPnB,QAASO,OAAOqB,GAChB3B,YAAaA,EACbC,aAAc4B,IAEhB,6BAlDKX,EAAMoB,OAAOtC,EAAc,GAAKM,OAAOqB,GAC3C3B,EAAeM,OAAOqB,IACtBH,KAAI,SAACe,GAAD,OACH,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YEnBhCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.143cee61.chunk.js","sourcesContent":["import classNames from 'classnames';\n\nexport type PaginationProps = {\n  total: string []\n  perPage: number\n  currentPage: number\n  onPageChange: (page: number) => void\n};\n\nexport const Pagination = ({\n  total, perPage, currentPage, onPageChange,\n}: PaginationProps) => {\n  const numberOfPages = Math.ceil(total.length / Number(perPage));\n\n  const chanePage = (i: number) => {\n    if (i !== currentPage && i !== 0 && i !== numberOfPages + 1) {\n      onPageChange(i);\n    }\n  };\n\n  const pagesList = () => {\n    const list = [];\n\n    for (let i = 1; i <= numberOfPages; i += 1) {\n      list.push(\n        <li\n          className={classNames('page-item',\n            { active: currentPage === i })}\n          key={i}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${i}`}\n            onClick={() => chanePage(i)}\n          >\n            {i}\n          </a>\n        </li>,\n      );\n    }\n\n    return list;\n  };\n\n  const ariaPrevDisabled = () => {\n    if (currentPage === 1) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const ariaNextDisabled = () => {\n    if (currentPage === numberOfPages) {\n      return true;\n    }\n\n    return false;\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames('page-item', { disabled: currentPage === 1 })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={ariaPrevDisabled()}\n          onClick={() => chanePage(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n      {pagesList()}\n      <li className={classNames('page-item',\n        { disabled: currentPage === numberOfPages })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={ariaNextDisabled()}\n          onClick={() => chanePage(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPage] = useState<string>('5');\n  const [currentPage, setCurrentPage] = useState<number>(1);\n\n  const perPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setItemsPerPage(() => event.target.value);\n    setCurrentPage(1);\n  };\n\n  const henderItens = () => {\n    return items.slice((currentPage - 1) * Number(itemsPerPage),\n      (currentPage) * Number(itemsPerPage))\n      .map((item) => (\n        <li data-cy=\"item\" key={item}>{item}</li>\n      ));\n  };\n\n  const startItem = (currentPage - 1) * Number(itemsPerPage) + 1;\n  let lastItem = currentPage * Number(itemsPerPage);\n\n  if (lastItem > items.length) {\n    lastItem = items.length;\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startItem}`\n   + ` - ${lastItem} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={perPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items}\n        perPage={Number(itemsPerPage)}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n      <ul>\n        {henderItens()}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}